INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_BINARY_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

FIND_PACKAGE(SWIG REQUIRED)
INCLUDE(${SWIG_USE_FILE})
SET(CMAKE_SWIG_OUTDIR ${CMAKE_BINARY_DIR})

IF(CMAKE_BUILD_TYPE STREQUAL Debug)
        MESSAGE(STATUS "SWIG Warnings enabled")
ELSE()
        MESSAGE(STATUS "SWIG Warnings disabled")
        SET(SWIG_ARGS -w501,473,509,517,401)
ENDIF()

#Build Pythonenv for Calimero
IF(NOT EXISTS swigruntime.h)
    EXECUTE_PROCESS(COMMAND ${SWIG_EXECUTABLE} -python ${SWIG_ARGS} -c++ -threads -external-runtime ${CMAKE_CURRENT_BINARY_DIR}/swigruntime.cpp)
ENDIF()

FILE(GLOB_RECURSE ENV_FILES *.cpp)
INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIR})

ADD_LIBRARY(calimeropythonenv SHARED ${ENV_FILES})
TARGET_LINK_LIBRARIES(calimeropythonenv calimerocore ${QT_LIBRARIES} ${PYTHON_LIBRARIES})

SET_TARGET_PROPERTIES(calimeropythonenv
    PROPERTIES
    OUTPUT_NAME "calimeropythonenv"
    PREFIX ""
)

INSTALL(TARGETS calimeropythonenv
        DESTINATION bin
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

#Build calimero for python
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})

SET(CMAKE_SWIG_FLAGS "")
SET_SOURCE_FILES_PROPERTIES(pycalimero.i PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(pycalimero.i PROPERTIES SWIG_FLAGS "-threads")

SWIG_ADD_MODULE(pycalimero python pycalimero.i)
SWIG_LINK_LIBRARIES(pycalimero calimerocore ${PYTHON_LIBRARIES} calimeropythonenv)



